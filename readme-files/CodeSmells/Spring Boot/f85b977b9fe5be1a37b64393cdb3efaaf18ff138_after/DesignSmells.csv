Project Name,Package Name,Type Name,Design Smell,Cause of the Smell,Comments
code-quality-analyzer-backend,code.quality.analyzer.util,Constants,Deficient Encapsulation,The tool detected the smell in this class because the class exposes fields belonging to it with public accessibility. Following fields are declared with public accessiblity: EMPTY; ONE; REPORT_PATH; REPO_PATH; REPO_SUFFIX; BRANCH_PREFIX; REMOTE_ORIGIN; REMOTE_BRANCH; REMOTE_COMMIT; BRANCH; REPO_URL; COMMIT1; COMMIT2; COMMIT3; COMMIT4; COMMIT5; USER1; USER2; REPO_URL_ALLCOMMITS; TOTAL_COMMITS_1; TOTAL_COMMITS_2; ZERO; LOCALHOST; PORT; HTTP_STATUS; ONE_COMMIT_URL; TREND_URL; HOTSPOT_URL; ANALYSIS_RESPONSE,"This is a constants class which is specifically added to store the constants used in several java files. It helps to remove duplication if the same constant is getting used in more than one java file. As other java classes are using the constants defined in this class, it is necessary to give public access to these constants, so that other classes can easily use it. Hence,  this smell is false positive."
code-quality-analyzer-backend,code.quality.analyzer.util,Constants,Broken Modularization,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields are declared in this class: EMPTY; ONE; REPORT_PATH; REPO_PATH; REPO_SUFFIX; BRANCH_PREFIX; REMOTE_ORIGIN; REMOTE_BRANCH; REMOTE_COMMIT; BRANCH; REPO_URL; COMMIT1; COMMIT2; COMMIT3; COMMIT4; COMMIT5; USER1; USER2; REPO_URL_ALLCOMMITS; TOTAL_COMMITS_1; TOTAL_COMMITS_2; ZERO; LOCALHOST; PORT; HTTP_STATUS; ONE_COMMIT_URL; TREND_URL; HOTSPOT_URL; ANALYSIS_RESPONSE,"This is a constants class which is specifically added to store the constants used in several java files. It helps to remove duplication if the same constant is getting used in more than one java file. As data members defined in this class are constants, they are not supposed to be changed anywhere in any other files. Also, these constants are marked static as the same values of these constants must be used for all the instances without allowing to update them. Hence, there are not getters and setters provided in this class, as value updation should not be allowed and they can be read using class name as they are static members. Also, as this is only a constant class, it must not perform any kind of other task. Hence, there are no methods provided in this class. Thus, this smell is a false positive."
code-quality-analyzer-backend,code.quality.analyzer.model,OneCommitAnalysisRequest,Unnecessary Abstraction,The tool detected the smell in this class because the class contains only a few data members without any method implementation,"This class provides the request structure to call python analysis service for one commit analysis. Although, it does not contain any data members of its own and only inherits the members of its super class, this class in necessary to implement open/closed principle. For example, currently we are only passing report path as request body to python one commit service. But, suppose in future, if python service will also need some other specific value along with report path, then at that time we can add new data members to this class without modifying its super class and any of its sibling classes. Thus, it makes python service request object open for extension, but closed for modification. Hence, this smell is a false positive."
code-quality-analyzer-backend,code.quality.analyzer.model,HotspotAnalysisRequest,Unnecessary Abstraction,The tool detected the smell in this class because the class contains only a few data members without any method implementation,"This class provides the request structure to call python analysis service for hotspot analysis. Although, it does not contain any data members of its own and only inherits the members of its super class, this class in necessary to implement open/closed principle. For example, currently we are only passing report path as request body to python hotspot analysis service. But, suppose in future, if python service will also need some other specific value along with report path, then at that time we can add new data members to this class without modifying its super class and any of its sibling classes. Thus, it makes python service request object open for extension, but closed for modification. Hence, this smell is a false positive."
code-quality-analyzer-backend,code.quality.analyzer.model,TrendAnalysisRequest,Broken Hierarchy,The tool detected a potential instance of the smell because this type does not implement or override any method from it's supertype(s): AnalysisServiceRequest,"Although, this class does not implement or override any of its super class methods, it inherits the data members from its super class AnalysisServiceRequest. Also AnalysisServiceRequest class provides the general implementation of request object to call python analysis service. But TrendAnalysisRequest provides the specific request object implementation required to call python analysis service for trend analysis. Hence, it is one type of request object for python service call. Thus, this class forms 'is-a' relationship with its super class and it's not a broken hierarchy. This smell is false negative."
code-quality-analyzer-backend,code.quality.analyzer.exception,CommitsAnalysisExceptionHandler,Unutilized Abstraction,The tool detected the smell in this class because this class is potentially unused. (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.),"This class is a controller advice class of spring boot which is implemented to handle exceptions. It is a global exception handler as annotated with @ControllerAdvice annotation. If any exception handled in this class will be thrown in the program, then this class will catch and handle them. For example, we have RefNotFoundException exception handled in this class. So, suppose, while checking out a branch, if branch will not found, then this exception will be thrown by program. At that time, this class will handle that exception and send appropriate response. Hence, it is not a unutilized class and this smell is false positive."
